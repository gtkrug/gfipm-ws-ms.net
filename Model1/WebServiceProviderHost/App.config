<?xml version="1.0"?>
<configuration>
  
  <!-- TEMP -->
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  
  <appSettings>
    <add key="TrustFabricDocument" value="TrustFabric\gfipm-trust-fabric-model2-sample-signed.xml"/>
    <add key="UploadFolder" value="Uploads"/>
    <add key="UploadFilePrefix" value="UploadedFile_"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
  
  <system.web>
    <customErrors mode="Off"/>
    <compilation debug="true"/>
  </system.web>
  
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>
    <services>
      <service name="CommercialVehicleCollisionWebservice.CommercialVehicleCollisionPortType" behaviorConfiguration="serviceBehavior">
        <host>
          <timeouts openTimeout="00:05:00"/>
        </host>
            
        <!-- New Binding from Code -->
        <!--<endpoint address="" binding="wspCustomSecuredBinding" behaviorConfiguration="endpointSecurityConfig" bindingNamespace="urn:examples.com:techniques:iepd:commercialVehicleCollision:ws:2.0" contract="ICommercialVehicleCollisionPortType" name="HTTPS-Endpoint">
        </endpoint>-->

        <!-- Original WORKING CUSTOM -->
        <endpoint address="" binding="customBinding" 
                  bindingConfiguration="CustomSecureTransport" 
                  behaviorConfiguration="endpointSecurityConfig" 
                  bindingNamespace="urn:examples.com:techniques:iepd:commercialVehicleCollision:ws:2.0" 
                  contract="ICommercialVehicleCollisionPortType" 
                  name="HTTPS-Endpoint">
        </endpoint>

        <!-- Working secured mex endpoint -->
        <!-- When HTTPS REquireClientCertificate is TRUE, the binding for the MEX endpoint must match that of the service https endpoint!!! -->
        <!--<endpoint address="mex" binding="wspCustomSecuredBinding" bindingNamespace="urn:examples.com:techniques:iepd:commercialVehicleCollision:ws:2.0" contract="IMetadataExchange"/>-->
        
        <endpoint address="mex" binding="mexHttpsBinding" bindingNamespace="urn:examples.com:techniques:iepd:commercialVehicleCollision:ws:2.0" contract="IMetadataExchange" />        
        <!-- Testing unsecured mex endpoint-->
        <!--<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>-->
      </service>
    </services>
    <bindings>
      <customBinding>

        <binding name="CustomSecureTransportTest" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          
          <security authenticationMode="MutualCertificateDuplex" includeTimestamp="true" requireDerivedKeys="false" allowSerializedSigningTokenOnReply="true" 
                    defaultAlgorithmSuite="Basic256Sha256" messageProtectionOrder="SignBeforeEncrypt" 
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" 
                    requireSignatureConfirmation="false"/>
          
          <mtomMessageEncoding messageVersion="Soap11WSAddressing10"/>

          <httpsTransport realm="" manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="200000000" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="200000000" proxyAuthenticationScheme="Anonymous" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" requireClientCertificate="false"/>
        </binding>

        <binding name="CommercialVehicleCollisionBinding">
          
          <security defaultAlgorithmSuite="Basic256Sha256" authenticationMode="MutualCertificateDuplex" requireDerivedKeys="false" securityHeaderLayout="Strict" 
                    includeTimestamp="true" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" 
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false">
            <localClientSettings cacheCookies="true" detectReplays="true" replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite" 
                                 replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" 
                                 timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60"/>
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00" maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00" negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00" sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000" timestampValidityDuration="00:05:00"/>
            <secureConversationBootstrap/>
          </security>
          <mtomMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" maxBufferSize="65536" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </mtomMessageEncoding>
          <httpsTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true" requireClientCertificate="false"/>
        </binding>
      

        <binding name="CustomSecureTransport" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          
          <reliableSession ordered="True"/>
          
          <security authenticationMode="MutualCertificateDuplex" includeTimestamp="true" requireDerivedKeys="false" allowSerializedSigningTokenOnReply="true" 
                    defaultAlgorithmSuite="Basic256Sha256" messageProtectionOrder="SignBeforeEncrypt" 
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="true"/>
          
          <mtomMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>
        
          <httpsTransport realm="" manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="200000000" allowCookies="false" 
                          authenticationScheme="Anonymous" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" 
                          maxBufferSize="200000000" proxyAuthenticationScheme="Anonymous" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" 
                          useDefaultWebProxy="true" requireClientCertificate="false"/>

        </binding>
        
      </customBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">

          <serviceAuthorization serviceAuthorizationManagerType="WebServiceProviderHost.WspServiceAuthorizationManager, WebServiceProviderHost">
            <authorizationPolicies>
              <add policyType="WebServiceProviderHost.WspAuthorizationPolicy, WebServiceProviderHost"/>
            </authorizationPolicies>
          </serviceAuthorization>
          
          <serviceSecurityAudit auditLogLocation="Application" messageAuthenticationAuditLevel="SuccessOrFailure" serviceAuthorizationAuditLevel="SuccessOrFailure" suppressAuditFailure="false"/>
          <serviceCredentials>
            
            <!-- Certificate Configuration - ha50wspm1 -->
            <serviceCertificate findValue="11 ee dc 0e 58 e0 ba c8 70 33 25 08 72 4b 4d 60 09 a8 d2 ad" 
                                x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="My"/>
            
            <clientCertificate>
              <authentication certificateValidationMode="Custom" customCertificateValidatorType="Common.CustomX509CertificateValidator, Common" trustedStoreLocation="LocalMachine"/>
            </clientCertificate>
          </serviceCredentials>
          <!-- To avoid disclosing metadata information, 
          set the value below to false and remove the metadata endpoint above before deployment -->
          <!-- httpGetEnabled="false" when RequireClientCertificate in HTTPS binding is TRUE-->
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="true"/>
          
          <!--<serviceMetadata httpsGetEnabled="true"/>-->
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="True"/>
        </behavior>
      </serviceBehaviors>
      
      <endpointBehaviors>
        <behavior name="endpointSecurityConfig">

          <!-- When this behavior is enabled and the data payload is big the 
               logged will be big -->
          <!--<customMessageInspector/>-->
          
          <!-- None, Sign, EncryptAndSign-->
          <!--<protectionLevel level="Sign"/>-->  
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <extensions>
      <bindingExtensions>
        <add name="wspCustomSecuredBinding" type="Common.WspCustomSecuredBindingCollectionElement, Common"/>
      </bindingExtensions>
      <behaviorExtensions>
        <!--<add name="protectionLevel" type="Common.ProtectionLevelBehaviorElement, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>-->

        <!-- TEMP -->
        <add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />

        <add name="customMessageInspector" type="WebServiceProviderHost.CommercialVehicleInspectorBehaviorElement, WebServiceProviderHost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>

    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="30000" maxSizeOfMessageToLog="524288"/>
    </diagnostics>
  </system.serviceModel>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      
      <source name="System.ServiceModel.MessageLogging" switchValue="Critical,Error" logKnownPii="true">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="MyTraceSource" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name ="myListener"/>
        </listeners>
      </source>
      <!--<source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="traceListener"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData= "c:\temp\Traces.svclog" />
        </listeners>
      </source>-->
    </sources>
    <sharedListeners>
      <add initializeData="C:\temp\Model1Wsp-MyTraceSource.log" type="System.Diagnostics.TextWriterTraceListener" name="myListener"/>
      <!--<add initializeData="C:\temp\WcfLog.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml" />-->
      <add initializeData="C:\temp\Model1-WSP-WcfLog.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
    </sharedListeners>
    <trace autoflush="true"/>
  </system.diagnostics>
  <startup>
    
  <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup>
</configuration>
