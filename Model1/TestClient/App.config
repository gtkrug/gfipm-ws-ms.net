<?xml version="1.0"?>
<configuration>
  <system.serviceModel>

    <client>
      <!--<endpoint address="http://Oceania:8080/ConsumerProvider/CommercialVehicleCollisionWebService.CommercialVehicleCollisionPortType.svc"
              binding="ws2007HttpBinding" bindingConfiguration="WSHttpBinding_IMasterHelloWorld" behaviorConfiguration="wsHttpEndpointBehavior"
              contract="ICommercialVehicleCollisionPortType"
              name="WSHttpBinding_IMasterHelloWorld">-->

      <!--<endpoint address="https://Oceania:8443/ConsumerProvider/CommercialVehicleCollisionWebService.CommercialVehicleCollisionPortType.svc"
                    binding="ws2007HttpBinding" bindingConfiguration="SecureTransport" behaviorConfiguration="wsHttpEndpointBehavior" 
                    contract="ICommercialVehicleCollisionPortType" name="CommercialVehicleCollisionWebService.CommercialVehicleCollisionPortType">-->

      <endpoint address="http://HA50WSP:8080/ConsumerProvider/CommercialVehicleCollisionPortType.svc/TestEndpoint"
          binding="customBinding" bindingConfiguration="CustomTransport" behaviorConfiguration="wsHttpEndpointBehavior"
          contract="ICommercialVehicleCollisionPortType" name="CommercialVehicleCollisionWebservice.CommercialVehicleCollisionPortType">
        <identity>
          <!--<dns value="CN = HA50WSP" />-->
          <certificateReference findValue="8a 31 cd 95 37 7e f8 a7 f0 1b 81 e9 79 79 aa 64 96 63 c8 f6"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>

        </identity>
      </endpoint>


      <!--<endpoint address="https://HA50WSP:8443/ConsumerProvider/CommercialVehicleCollisionPortType.svc"
         binding="customBinding" bindingConfiguration="CustomSecureTransportTest" behaviorConfiguration="wsHttpEndpointBehavior"
         contract="ICommercialVehicleCollisionPortType" name="CommercialVehicleCollisionWebservice.CommercialVehicleCollisionPortType-HTTPS">
        <identity>
          --><!--<dns value="CN = Oceania" />--><!--
          <certificateReference findValue="8a 31 cd 95 37 7e f8 a7 f0 1b 81 e9 79 79 aa 64 96 63 c8 f6"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>

        </identity>
      </endpoint>-->

      <!--<endpoint address="https://HA50WSP:8443/ConsumerProvider/CommercialVehicleCollisionPortType.svc/Test"
               binding="ws2007HttpBinding" bindingConfiguration="SecureTransport" behaviorConfiguration="wsHttpEndpointBehavior"
               contract="ICommercialVehicleCollisionPortType" name="Standard-ws2007HttpBinding">
        <identity>
          --><!--<dns value="CN = Oceania" />--><!--
          <certificateReference findValue="8a 31 cd 95 37 7e f8 a7 f0 1b 81 e9 79 79 aa 64 96 63 c8 f6"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>

        </identity>
      </endpoint>-->

      <!-- Working Original-->
      <endpoint address="https://HA50WSP:8443/ConsumerProvider/CommercialVehicleCollisionPortType.svc"
               binding="customBinding"  bindingConfiguration="CustomSecureTransport" behaviorConfiguration="wsHttpEndpointBehavior"
               contract="ICommercialVehicleCollisionPortType" name="CommercialVehicleCollisionWebservice.CommercialVehicleCollisionPortType-HTTPS">
        <identity>
          <!--<dns value="CN = HA50WSP" />-->
          <certificateReference findValue="8a 31 cd 95 37 7e f8 a7 f0 1b 81 e9 79 79 aa 64 96 63 c8 f6"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>

        </identity>
      </endpoint>


      <!--dunland.ittl.gtri.org-->
      <endpoint address="https://dunland.ittl.gtri.org:8443/ConsumerProvider/CommercialVehicleCollisionPortType.svc/test"
                     binding="gfipmBindingTest"  behaviorConfiguration="wsHttpEndpointBehavior"
                     contract="ICommercialVehicleCollisionPortType" name="CommercialVehicleCollisionWebservice.CommercialVehicleCollisionPortType-HTTPS">
        <identity>
          <!--<dns value="CN = HA50WSP" />-->
          <certificateReference findValue="8a 31 cd 95 37 7e f8 a7 f0 1b 81 e9 79 79 aa 64 96 63 c8 f6"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>

        </identity>
      </endpoint>

      <endpoint address="https://dunland.ittl.gtri.org:8443/ConsumerProvider/CommercialVehicleCollisionPortType.svc"
                binding="customBinding" bindingConfiguration="Standard-ws2007HttpBinding"
                behaviorConfiguration="wsHttpEndpointBehavior"
                contract="ICommercialVehicleCollisionPortType" name="Standard-ws2007HttpBinding">
        <identity>
          <certificate encodedValue="AwAAAAEAAAAUAAAAijHNlTd++KfwG4HpeXmqZJZjyPYgAAAAAQAAAHgDAAAwggN0MIIC3aADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGJMQswCQYDVQQGEwJVUzEPMA0GA1UECBMGSGF3YWlpMREwDwYDVQQHEwhIb25vbHVsdTEVMBMGA1UEChMMSGF3YWlpIEZpdmUwMRAwDgYDVQQDEwdIQTUwV1NQMS0wKwYJKoZIhvcNAQkBFh5nZmlwbS1zdXBwb3J0QGxpc3RzLmdhdGVjaC5lZHUwHhcNMTEwNDEzMTg1MDAyWhcNMTYwNDExMTg1MDAyWjCBiTELMAkGA1UEBhMCVVMxDzANBgNVBAgTBkhhd2FpaTERMA8GA1UEBxMISG9ub2x1bHUxFTATBgNVBAoTDEhhd2FpaSBGaXZlMDEQMA4GA1UEAxMHSEE1MFdTUDEtMCsGCSqGSIb3DQEJARYeZ2ZpcG0tc3VwcG9ydEBsaXN0cy5nYXRlY2guZWR1MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCmZVtKWWMzSzT6Duj9PiPg6fhZJSxZ92PV81LzP9TTuNcz7xEWTKIhUAhIS1PEElhnPuOj3dXJOONog4I1/mz2yMFdgDTGMeruGUwVuxsqu8BjSKk82E2nQEppIMIL4YzTtVhkqkbAUEqm0ubvhUFBL3C6g62sVAOfNpqtlhhQwIDAQABo4HpMIHmMB0GA1UdDgQWBBRHCjN9FQmg5bywb8zKphfxTfH2wTCBtgYDVR0jBIGuMIGrgBRHCjN9FQmg5bywb8zKphfxTfH2waGBj6SBjDCBiTELMAkGA1UEBhMCVVMxDzANBgNVBAgTBkhhd2FpaTERMA8GA1UEBxMISG9ub2x1bHUxFTATBgNVBAoTDEhhd2FpaSBGaXZlMDEQMA4GA1UEAxMHSEE1MFdTUDEtMCsGCSqGSIb3DQEJARYeZ2ZpcG0tc3VwcG9ydEBsaXN0cy5nYXRlY2guZWR1ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAYFeC5dM1XHzWsKjp54ug1cUEuhMy1lZqGUhrm5Xe6h8GeFlsqItJQfkUVj8LyvWjtV02SknHe8F0wmYQrtgGACXfR1XZ18d8oUSC0qvb3yX4ZFowyiSP7qKgTDqeUQdFvrG12tMlRDdFWvBMGl06boqyDuch4rXNH7SCKMsdd5E=" />
        </identity>
      </endpoint>

    </client>

    <bindings>
      <customBinding>

        <!-- SvcUtil generated Config -->
        <binding name="Standard-ws2007HttpBinding">
          <!--    WsdlImporter encountered unrecognized policy assertions in ServiceDescription 'urn:examples.com:techniques:iepd:commercialVehicleCollision:ws:2.0':    -->
          <!--    <wsdl:binding name='Standard-ws2007HttpBinding'>    -->
          <!--        <sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">..</sp:TransportBinding>    -->
          <security defaultAlgorithmSuite="Default" authenticationMode="MutualCertificate"
              requireDerivedKeys="true" securityHeaderLayout="Strict" includeTimestamp="true"
              keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt"
              messageSecurityVersion="WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10"
              requireSignatureConfirmation="true">
            <localClientSettings cacheCookies="true" detectReplays="true"
                replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                reconnectTransportOnFailure="true" maxPendingSessions="128"
                maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
            <secureConversationBootstrap />
          </security>
          <mtomMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
              messageVersion="Soap11WSAddressing10" maxBufferSize="65536"
              writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </mtomMessageEncoding>
          <httpsTransport manualAddressing="false" maxBufferPoolSize="524288"
              maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
              bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard"
              keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
              realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
              useDefaultWebProxy="true" requireClientCertificate="false" />
        </binding>

        <binding name="CustomSecureTransport" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <security defaultAlgorithmSuite="Basic256Sha256" authenticationMode="MutualCertificateDuplex" includeTimestamp="true" requireDerivedKeys="false"
                    allowSerializedSigningTokenOnReply="true"  messageProtectionOrder="SignBeforeEncrypt"
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                    requireSignatureConfirmation="false"/>

          <!--<security authenticationMode="MutualCertificate"
                  messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                  requireDerivedKeys="false" />-->

          <!--<textMessageEncoding />-->
          <mtomMessageEncoding  messageVersion="Soap11WSAddressing10" />

          <!--<httpsTransport requireClientCertificate="false" maxReceivedMessageSize="200000000"/>-->
          <!--<httpTransport maxReceivedMessageSize="200000000"/>-->
          <httpsTransport manualAddressing="false" maxBufferPoolSize="524288"
                                maxReceivedMessageSize="200000000" allowCookies="false" authenticationScheme="Anonymous"
                                bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard"
                                keepAliveEnabled="true" maxBufferSize="200000000" proxyAuthenticationScheme="Anonymous"
                                realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
                                useDefaultWebProxy="true" requireClientCertificate="false" />
        </binding>

        <binding name="CustomTransport" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <security defaultAlgorithmSuite="Basic256Sha256" authenticationMode="MutualCertificateDuplex" includeTimestamp="true" requireDerivedKeys="false"
                    allowSerializedSigningTokenOnReply="true"  messageProtectionOrder="SignBeforeEncrypt"
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                    requireSignatureConfirmation="false"/>

          <!--<security authenticationMode="MutualCertificate"
                  messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                  requireDerivedKeys="false" />-->

          <!--<textMessageEncoding />-->
          <mtomMessageEncoding  messageVersion="Soap11WSAddressing10" />

          <!--<httpsTransport requireClientCertificate="false" maxReceivedMessageSize="200000000"/>-->
          <httpTransport maxReceivedMessageSize="200000000"/>
          <!--<httpsTransport manualAddressing="false" maxBufferPoolSize="524288"
                                maxReceivedMessageSize="200000000" allowCookies="false" authenticationScheme="Anonymous"
                                bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard"
                                keepAliveEnabled="true" maxBufferSize="200000000" proxyAuthenticationScheme="Anonymous"
                                realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
                                useDefaultWebProxy="true" requireClientCertificate="false" />-->
        </binding>


      </customBinding>

      <ws2007HttpBinding>
        <binding name="SecureTransport" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="Certificate" establishSecurityContext="false" negotiateServiceCredential="false"/>
          </security>
        </binding>
      </ws2007HttpBinding>
    </bindings>
    
    <behaviors>
      <endpointBehaviors>
        <behavior name="wsHttpEndpointBehavior">
          <clientCredentials>

            <!-- HA50WSC -->
            <clientCertificate findValue="30 c5 e8 b0 31 04 86 1f ec 3e c7 d5 44 1f b7 dd 5a 5b 6b 7f"
                               x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="My"/>
            <serviceCertificate>
              <!--<authentication certificateValidationMode="PeerTrust" trustedStoreLocation="LocalMachine" />-->
              <authentication certificateValidationMode="Custom"
                              customCertificateValidatorType = "Common.CustomX509CertificateValidator, Common"
                              trustedStoreLocation="LocalMachine" />
            </serviceCertificate>
          </clientCredentials>

          <!--<protectionLevel level="Sign"/> --><!-- None, Sign, EncryptAndSign-->
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <extensions>
      <bindingExtensions>
        <add name="gfipmBindingTest" type="Common.GfipmBindingCollectionElement, Common"/>
      </bindingExtensions>
      <behaviorExtensions>
        <add name="protectionLevel" type="Common.ProtectionLevelBehaviorElement, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
        <!--<add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />-->
      </behaviorExtensions>
    </extensions>    
    
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true"
                      logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="524288"/>
    </diagnostics>


  </system.serviceModel>

  <system.diagnostics>

    <sources>

      <source name="System.ServiceModel" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>

      <!--<source name="System.ServiceModel"  switchValue="Information, ActivityTracing"    propagateActivity="true">
        <listeners>
          <add name="xml" />   
        </listeners>
      </source>  
      <source name="System.ServiceModel.MessageLogging" switchValue="Information">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>-->

      <!--<source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="messages"
          type="System.Diagnostics.XmlWriterTraceListener"
          initializeData="c:\temp\Traces.svclog" />
        </listeners>
      </source>-->

      <!--<source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="traceListener"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData= "c:\temp\Traces.svclog" />
        </listeners>
      </source>-->
    </sources>
    <sharedListeners>
      <add initializeData="C:\temp\ClientTestLog.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
    </sharedListeners>
    <trace autoflush="true"/>

  </system.diagnostics>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
