<?xml version="1.0"?>
<configuration>

  <system.serviceModel>

    <client>

      <!-- Endpoint Address Configuration - ha50wscm2 -->
      <!--<endpoint name="CommercialVehicleCollisionFrontendService" address="https://ha50wscm2:8643/Model2/Service.svc" binding="customBinding"
               bindingConfiguration="FederationBindingNet"  behaviorConfiguration="wscEndpointBehavior" contract="ICommercialVehicleCollisionPortType">-->

      <!--<endpoint name="CommercialVehicleCollisionFrontendService" address="https://ha50wscm2:8643/Model2/Service.svc" binding="customBinding"
                 bindingConfiguration="FederationBindingNet"  behaviorConfiguration="wscEndpointBehavior" contract="ICommercialVehicleCollisionPortType">-->


      <!-- Test using SvcUtil over the Net WSC-->
      <!--<endpoint name="CommercialVehicleCollisionFrontendService" address="https://ha50wscm2:8643/Model2/Service.svc" binding="ws2007FederationHttpBinding" bindingConfiguration="CommercialVehicleCollisionFrontendService" behaviorConfiguration="wscEndpointBehavior" contract="ICommercialVehicleCollisionPortType">-->

      <!-- WORKING WNDPOINT (Test using SvcUtil over the Metro STS) -->
      <!-- Net IDP -->
      <endpoint name="CommercialVehicleCollisionFrontendService" address="https://ha50wscm2:8643/Model2/Service.svc" binding="ws2007FederationHttpBinding" bindingConfiguration="CommercialVehicleCollisionFrontendService" contract="ICommercialVehicleCollisionPortType">

      <!-- Metro IDP -->
        <!--<endpoint name="CommercialVehicleCollisionFrontendService" address="https://ha50wscm2:8643/Model2/Service.svc" binding="ws2007FederationHttpBinding"
          bindingConfiguration="CommercialVehicleCollisionFrontendService-Metro" behaviorConfiguration="wscEndpointBehavior" contract="ICommercialVehicleCollisionPortType">-->

        <!--Certificate Configuration - ha50wscm2-->
        <!--<identity>
          <certificateReference findValue="a3 40 3a 26 b0 b1 d2 98 a7 63 f7 5d c4 ad 13 9e b2 82 3a bb" 
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>
        </identity>-->
      </endpoint>

      <!-- Enable this endpoint for HOK assertions -->
      <!--<endpoint name="CommercialVehicleCollisionFrontendService" address="http://ha50wscm2:8089/Model2/Service.svc" binding="ws2007FederationHttpBinding"
                bindingConfiguration="HolderOfKey"  behaviorConfiguration="wscEndpointBehavior" contract="ICommercialVehicleCollisionPortType">

        <identity>
          <certificateReference findValue="a3 40 3a 26 b0 b1 d2 98 a7 63 f7 5d c4 ad 13 9e b2 82 3a bb"
                                storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindByThumbprint"/>
        </identity>
      </endpoint>-->

    </client>

    <bindings>
      <customBinding>
        <!-- Test using SvcUtil over the Metro STS -->
        <binding name="IIdentityProviderService_Binding">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameForCertificate" requireDerivedKeys="false" securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false">
            <localClientSettings cacheCookies="true" detectReplays="true" replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite" replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60"/>
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00" maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00" negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00" sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000" timestampValidityDuration="00:05:00"/>
            <secureConversationBootstrap/>
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true"/>
        </binding>

        <!-- To use a Metro endpoint (it also applies to the Net endpoint), need to create a Metro specific binding to add the correct issuer identity -->
        <binding name="FederationBindingNet">
          <!--<security authenticationMode="IssuedTokenForCertificate" requireSignatureConfirmation="false"   messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">-->
          <security authenticationMode="IssuedTokenOverTransport" requireSignatureConfirmation="false" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">

            <!-- For Bearer or Sender-Vouches confirmation methods use the Bearer key type -->
            <issuedTokenParameters defaultMessageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" tokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0" keyType="BearerKey" keySize="0">

              <!-- For Holder-of-Key confirmation method use either the Symmetric or Asymmetric key type -->
              <!--<issuedTokenParameters defaultMessageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" tokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0" keyType="SymmetricKey" keySize="256">-->


              <!--<issuer address="https://ha50idp:8544/IDP-STS/Issue.svc" binding="ws2007HttpBinding" bindingConfiguration="UsernameBinding" />-->
              <!--<issuer address="http://ha50idp:8080/IDP-STS/Issue.svc" binding="customBinding" bindingConfiguration="SecureUsernameBinding"/>
              <issuerMetadata address="http://ha50idp:8080/IDP-STS/Issue.svc/mex"/>-->

              <!-- Current HTTPS policy 2-16-2012 -->
              <!--<issuer address="https://ha50idp:8544/IDP-STS/Issue.svc" binding="IdpStsCustomSecuredBinding" />
              <issuerMetadata address="https://ha50idp:8544/IDP-STS/Issue.svc/mex"/>-->

              <!-- Current HTTP policy 2-16-2012 -->
              <!-- Endpoint Address Configuration - ha50idpm2 -->
              <!--<issuer address="http://ha50idpm2:8080/Model2UserSts/Issue.svc" binding="customBinding" bindingConfiguration="SecureUsernameForCertificateBinding">-->
              <issuer address="http://ha50idpm2:8080/Model2UserSts/Issue.svc" binding="IdpStsCustomSecuredBinding">

                <!-- Certificate Configuration - ha50idpm2 -->
                <identity>
                  <certificateReference findValue="d4 4f ce 24 89 51 15 2f 74 00 17 a1 b2 ef 8a 00 d3 08 c8 e2" x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="TrustedPeople"/>
                </identity>
              </issuer>
              <!--<issuerMetadata address="http://ha50idp:8080/Model2UserSts/Issue.svc/mex"/>-->

              <!-- Metro STS endpoint -->
              <!--<issuer address="http://cureidp:8080/m2sts/services/sts" binding="IdpStsCustomSecuredBinding">
                <identity>
                  <dns value="cureidp"/>
                </identity>
              </issuer>
              <issuerMetadata address="http://cureidp:8080/m2sts/services/sts/mex">
                <identity>
                  <dns value="cureidp"/>
                </identity>
              </issuerMetadata>-->

              <!--<issuer address="https://10.51.8.81:8544/IDP-STS/Issue.svc/username_over_transport" binding="ws2007HttpBinding" bindingConfiguration="UsernameBinding" />
                          <issuerMetadata address="https://10.51.8.81:8544/IDP-STS/Issue.svc/username_over_transport/mex" />-->

            </issuedTokenParameters>
          </security>
          <mtomMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </mtomMessageEncoding>
          <httpsTransport maxReceivedMessageSize="200000000" maxBufferSize="200000000"/>
        </binding>

        <binding name="FederationBindingMetro">
          <!--<security authenticationMode="IssuedTokenForCertificate" requireSignatureConfirmation="false"   messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">-->
          <security authenticationMode="IssuedTokenOverTransport" requireSignatureConfirmation="false" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">

            <!-- For Bearer or Sender-Vouches confirmation methods use the Bearer key type -->
            <issuedTokenParameters defaultMessageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" tokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0">

              <!-- Current HTTP policy 2-16-2012 -->
              <!-- Endpoint Address Configuration - cureidpm2 -->
              <issuer address="http://cureidpm2:8080/m2sts/services/sts" binding="IdpStsCustomSecuredBinding">
                <!--<issuer address="http://cureidpm2:8080/m2sts/services/sts" binding="customBinding" bindingConfiguration="SecureUsernameForCertificateBinding">-->
                <!-- Certificate Configuration - cureidpm2 -->
                <identity>
                  <certificateReference findValue="0b 3b 80 97 4a d8 b8 35 32 81 59 0a 99 25 a5 86 97 3f 9d 44" x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="TrustedPeople"/>
                </identity>
              </issuer>

            </issuedTokenParameters>
          </security>
          <!--<textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Default" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </textMessageEncoding>-->
          <mtomMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </mtomMessageEncoding>

          <httpsTransport maxReceivedMessageSize="200000000" maxBufferSize="200000000"/>
        </binding>


        <binding name="SecureUsernameBinding">
          <security authenticationMode="UserNameOverTransport" includeTimestamp="true" requireDerivedKeys="false" allowSerializedSigningTokenOnReply="true" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false"/>
          <textMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>
          <httpsTransport/>
        </binding>

        <!-- shared binding fro Net and Metro User STS -->
        <binding name="SecureUsernameForCertificateBinding">
          <security authenticationMode="UserNameForCertificate" includeTimestamp="true" requireDerivedKeys="false" messageProtectionOrder="SignBeforeEncrypt" securityHeaderLayout="Lax" allowSerializedSigningTokenOnReply="true" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false"/>
          <textMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>
          <httpTransport/>
        </binding>


        <!-- TEMP Holde-Of-Key -->
        <binding name="CommercialVehicleCollisionFrontendService-HOK">
          <security defaultAlgorithmSuite="Default" authenticationMode="SecureConversation" requireDerivedKeys="true" securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSecurityContextCancellation="true" requireSignatureConfirmation="false">
            <localClientSettings cacheCookies="true" detectReplays="true" replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite" replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60"/>
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00" maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00" negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00" sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000" timestampValidityDuration="00:05:00"/>
            <secureConversationBootstrap defaultAlgorithmSuite="Default" authenticationMode="IssuedTokenForCertificate" requireDerivedKeys="true" securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncryptAndEncryptSignature" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="true">
              <issuedTokenParameters keySize="256" keyType="SymmetricKey" tokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0">
                <additionalRequestParameters>
                  <trust:SecondaryParameters xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
                    <trust:TokenType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</trust:TokenType>
                    <trust:KeyType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</trust:KeyType>
                    <trust:KeySize xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">256</trust:KeySize>
                    <trust:KeyWrapAlgorithm xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</trust:KeyWrapAlgorithm>
                    <trust:EncryptWith xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptWith>
                    <trust:SignWith xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2000/09/xmldsig#hmac-sha1</trust:SignWith>
                    <trust:CanonicalizationAlgorithm xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/10/xml-exc-c14n#</trust:CanonicalizationAlgorithm>
                    <trust:EncryptionAlgorithm xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptionAlgorithm>
                  </trust:SecondaryParameters>
                </additionalRequestParameters>
              </issuedTokenParameters>
              <localClientSettings cacheCookies="true" detectReplays="true" replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite" replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60"/>
              <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00" maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00" negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00" sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000" timestampValidityDuration="00:05:00"/>
            </secureConversationBootstrap>
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true"/>
        </binding>


        <binding name="http://ha50idpm2:8080/Model2UserSts/Issue.svc">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameForCertificate" requireDerivedKeys="false" securityHeaderLayout="Strict" includeTimestamp="true" keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false">
            <localClientSettings cacheCookies="true" detectReplays="true" replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite" replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60"/>
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00" maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00" negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00" sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000" timestampValidityDuration="00:05:00"/>
            <secureConversationBootstrap/>
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16" messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous" bypassProxyOnLocal="false" decompressionEnabled="true" hostNameComparisonMode="StrongWildcard" keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous" realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false" useDefaultWebProxy="true"/>
        </binding>
      </customBinding>

      <!-- Test Holder-of-Key-->
      <ws2007FederationHttpBinding>
        <binding name="HolderOfKey">
          <security mode="Message">
            <message negotiateServiceCredential="false" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0" issuedKeyType="SymmetricKey">
              <issuer address="http://ha50idpm2:8080/Model2UserSts/Issue.svc" binding="customBinding" bindingConfiguration="SecureUsernameForCertificateBinding">
                <identity>
                  <certificateReference findValue="d4 4f ce 24 89 51 15 2f 74 00 17 a1 b2 ef 8a 00 d3 08 c8 e2" x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="TrustedPeople"/>
                </identity>
              </issuer>
            </message>
          </security>
        </binding>

        <binding name="CommercialVehicleCollisionFrontendService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Mtom" textEncoding="utf-8" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="TransportWithMessageCredential">
            <message algorithmSuite="Default" establishSecurityContext="false" issuedKeyType="BearerKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0" negotiateServiceCredential="false">
              <issuer address="https://ha50idpm2:8544/Model2UserSts/Issue.svc" binding="customBinding" bindingConfiguration="SecureUsernameBinding">
                <!--<issuer address="http://ha50idpm2:8080/Model2UserSts/Issue.svc" binding="customBinding" bindingConfiguration="http://ha50idpm2:8080/Model2UserSts/Issue.svc">-->
                <identity>
                  <certificate encodedValue="AwAAAAEAAAAUAAAA1E/OJIlRFS90ABehsu+KANMIyOIgAAAAAQAAAAEEAAAwggP9MIIC5aADAgECAgkA7vCNwAZiD0owDQYJKoZIhvcNAQEFBQAwXDEdMBsGCSqGSIb3DQEJARYOaGE1MG0yQGlkcC5uZXQxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTENMAsGA1UEBxMEUm9tZTESMBAGA1UEAxMJaGE1MGlkcG0yMB4XDTEyMDQxODE2MTQxOFoXDTE3MTEyNjE2MTQxOFowXDEdMBsGCSqGSIb3DQEJARYOaGE1MG0yQGlkcC5uZXQxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTENMAsGA1UEBxMEUm9tZTESMBAGA1UEAxMJaGE1MGlkcG0yMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyXjwDMXvjHJj6qjYqqEsgXNIz+2H5/2QNnFj6uYDc1+xCDy2qIy+D+WaH3SyYT6pTMuHrzabi2AyFyYQQOXYGieZjDcNG0wUWTrafg5drV8P1MtdrHqf2jLsASuxqkngcEzBNAJvrn3Jr0jMECpr/Sv0RDvGVeisgctqItue/CqBwIqqGJDP/sMtN1xOQ8BVEJqESPQGgCBPusgBDDSqSpz27BQ9Aa+EduLAGyMHlfn/Tv5QSZfWnnrGuzYKEUEl4iZnmiGQ/cRJwVzUl+2K706ULEesSnkR5eKLfmxo3CmfpFDhGkxpVB5zWx2qVes3GU9uhLXFsIYTtj3h0VZDDwIDAQABo4HBMIG+MB0GA1UdDgQWBBSCatGkCQh2rENXjO0P6WkjmnZ2QDCBjgYDVR0jBIGGMIGDgBSCatGkCQh2rENXjO0P6WkjmnZ2QKFgpF4wXDEdMBsGCSqGSIb3DQEJARYOaGE1MG0yQGlkcC5uZXQxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTENMAsGA1UEBxMEUm9tZTESMBAGA1UEAxMJaGE1MGlkcG0yggkA7vCNwAZiD0owDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAWBE83vUkS1hRU0NwDA/L5sbNPH564WM3lOTt5Ttd9afzaItDsaK2ITE+Mzf2E8LIqvfFHeTCE7oZ6eQuhLqNHN3Q5DL25rEuWLce3n0JCBjwHsSN04EXLdLAYVRrLKEMpgx05+CSQRY/Vankvbsp0ygSx8ebcUbKIhdeeabdWPT7zmiHXbodI63ZPiDgHC7N5pT5lvMPytL7STEOfVfC1QpFclfTRDn+ATH+YBfCD7CGh5AtG7K4gd/4rZw4PgqdqrQUHGCBFzLg9ZEP3unHgx8580zlXPgrI7W3vfgEcwxqCg0O4ysPquk3H23hbC8QN7Lf4DCcKtRXlFiUEksUWw=="/>
                </identity>
              </issuer>
              <issuerMetadata address="http://ha50idpm2:8080/Model2UserSts/Issue.svc/mex"/>
              <tokenRequestParameters>
                <trust:SecondaryParameters xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
                  <trust:TokenType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</trust:TokenType>
                  <trust:KeyType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer</trust:KeyType>
                  <trust:KeySize xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">0</trust:KeySize>
                </trust:SecondaryParameters>
              </tokenRequestParameters>
            </message>
          </security>
        </binding>

        <binding name="CommercialVehicleCollisionFrontendService-Metro" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Mtom" textEncoding="utf-8" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="TransportWithMessageCredential">
            <message algorithmSuite="Default" establishSecurityContext="false" issuedKeyType="BearerKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0" negotiateServiceCredential="true">
              <!--<issuer address="http://cureidpm2:8080/m2sts/services/idp" binding="customBinding" bindingConfiguration="IIdentityProviderService_Binding">-->
              <issuer address="https://cureidpm2:8181/m2sts/services/idp" binding="customBinding" bindingConfiguration="SecureUsernameBinding">
                <identity>
                  <certificateReference findValue="0b 3b 80 97 4a d8 b8 35 32 81 59 0a 99 25 a5 86 97 3f 9d 44" x509FindType="FindByThumbprint" storeLocation="LocalMachine" storeName="TrustedPeople"/>
                </identity>
              </issuer>
              <issuerMetadata address="http://cureidpm2:8080/m2sts/services/idp/mex"/>
              <tokenRequestParameters>
                <trust:SecondaryParameters xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
                  <trust:TokenType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</trust:TokenType>
                  <trust:KeyType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer</trust:KeyType>
                  <trust:KeySize xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">0</trust:KeySize>
                </trust:SecondaryParameters>
              </tokenRequestParameters>
            </message>
          </security>
        </binding>


      </ws2007FederationHttpBinding>

    </bindings>

    <behaviors>
      <endpointBehaviors>
        <behavior name="wscEndpointBehavior">
          <clientCredentials>
            <serviceCertificate>
              <!--HA50IDP-->
              <!--<defaultCertificate findValue="65 c7 27 37 93 8a 2f 24 4b 77 ff 72 0a 2a ed 48 4b 26 ef 82" 
                                  x509FindType="FindByThumbprint" storeName="TrustedPeople" storeLocation="LocalMachine"/>-->

              <!--CUREIDP-->
              <!--<defaultCertificate findValue="a8 3a f6 ad f6 cd 7d f3 bf ca 5f 23 26 15 8f 7e ad 37 8b 66"
                                  x509FindType="FindByThumbprint" storeName="TrustedPeople" storeLocation="LocalMachine"/>-->

            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <extensions>
      <bindingExtensions>
        <add name="IdpStsCustomSecuredBinding" type="Common.IdpStsCustomSecuredBindingCollectionElement, Common"/>
      </bindingExtensions>
    </extensions>

    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="524288"/>
    </diagnostics>

  </system.serviceModel>

  <system.diagnostics>

    <sources>

      <source name="System.ServiceModel" switchValue="Critical, Error" propagateActivity="true">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Critical,Error">
        <listeners>
          <add name="xmlMessages"/>
        </listeners>
      </source>

      <source name="System.IdentityModel.MessageLogging" switchValue="Verbose, ActivityTracing" logKnownPii="true">
        <listeners>
          <add name="xmlIdentity"/>
        </listeners>
      </source>
      <source name="System.IdentityModel" switchValue="Verbose, ActivityTracing" logKnownPii="true">
        <listeners>
          <add name="xmlIdentity"/>
        </listeners>
      </source>

      <source name="MyTraceSource" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name="myListener"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="C:\temp\CommercialVehicleCollisionClient-WcfLog-MyTraceSource.log" type="System.Diagnostics.TextWriterTraceListener" name="myListener"/>
      <add initializeData="C:\temp\CommercialVehicleCollisionClient-WcfLog.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
      <add initializeData="C:\temp\CommercialVehicleCollisionClient-WcfLog-Messages.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xmlMessages"/>
      <add initializeData="c:\temp\IdentityTrace.svclog" name="xmlIdentity" type="System.Diagnostics.XmlWriterTraceListener"/>
    </sharedListeners>
    <trace autoflush="true"/>

  </system.diagnostics>

  <startup>

    
  <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup>
</configuration>
