<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>    
  </configSections>

  <appSettings>
    <!-- IssuerName Configuration - ha50idpm2 -->
    <add key="IssuerName" value="ha50idpm2"/>
    <!-- Certificate Configuration - ha50idpm2 -->
    <add key="SigningCertificateName" value="CN=ha50idpm2, L=Rome, S=GA, C=US, E=ha50m2@idp.net"/>
    <!-- Certificate Configuration - ha50wscm2 -->
    <!--<add key="EncryptingCertificateName" value="E=ha50m2@wsc.net, CN=ha50wscm2, L=Dallas, S=TX, C=US"/>-->
  </appSettings>

  <system.web>
    <customErrors mode="Off"/>
  </system.web>
  
  <system.serviceModel>
    <services>
      <service name="Microsoft.IdentityModel.Protocols.WSTrust.WSTrustServiceContract" behaviorConfiguration="IdentityProviderStsBehavior">
        <!--<endpoint address="" binding="customBinding" bindingConfiguration="SecureUsernameForCertificateBinding" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>-->

        <!-- Working Net-->
        <!--<endpoint address="" binding="IdpStsCustomSecuredBinding" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>-->

        <!-- Test using SvcUtil over the Metro STS -->
        <!--<endpoint address="" binding="customBinding" bindingConfiguration="IIdentityProviderService_Binding" 
                  contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" 
                  bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>-->
        
        
        <endpoint address="" binding="customBinding" bindingConfiguration="CustomSecureTransport" 
                  contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract"
                  bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>
        <!--<endpoint address="" binding="ws2007HttpBinding" bindingConfiguration="IdentityProviderBindingConfiguration"
                          contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" />-->
        <!--<endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange"/>-->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>
      </service>
    </services>

    <bindings>
      <customBinding>

        <!-- Test using SvcUtil over the Metro STS -->
        <binding name="IIdentityProviderService_Binding">
          <security defaultAlgorithmSuite="Default" authenticationMode="UserNameForCertificate"
              requireDerivedKeys="false" securityHeaderLayout="Strict" includeTimestamp="true"
              keyEntropyMode="CombinedEntropy" messageProtectionOrder="SignBeforeEncrypt"
              messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
              requireSignatureConfirmation="false">
            <localClientSettings cacheCookies="true" detectReplays="true"
                replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
                replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
                sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
                timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
                maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
                negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
                sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
                reconnectTransportOnFailure="true" maxPendingSessions="128"
                maxCachedCookies="1000" timestampValidityDuration="00:05:00" />
            <secureConversationBootstrap />
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
              messageVersion="Soap11WSAddressing10" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288"
              maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
              bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
              keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
              realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
              useDefaultWebProxy="true" />
        </binding>

        <binding name="CustomSecureTransport">
          <security authenticationMode="UserNameOverTransport" includeTimestamp="true" requireDerivedKeys="false" allowSerializedSigningTokenOnReply="true" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false"  />
          <textMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>
          <httpsTransport />
        </binding>

        <!-- TEST -->
        <binding name="SecureUsernameForCertificateBinding">

          <security authenticationMode="UserNameForCertificate" includeTimestamp="true" requireDerivedKeys="false" messageProtectionOrder="SignBeforeEncrypt" securityHeaderLayout="Lax" allowSerializedSigningTokenOnReply="true" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false"/>
          <textMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>
          <httpTransport/>
        </binding>
      </customBinding>
      
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="IdentityProviderStsBehavior">
          <!-- 
          The serviceMetadata behavior allows one to enable metadata (e.g. WSDL, Policy) publishing.
          This configuration enables publishing of such data over HTTP GET.
          -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false"/>
          <!--<serviceMetadata httpsGetEnabled="true"/>-->
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceCredentials>
          <!-- Certificate Configuration - ha50idpm2 -->
          <serviceCertificate findValue="d4 4f ce 24 89 51 15 2f 74 00 17 a1 b2 ef 8a 00 d3 08 c8 e2"
                              storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
          <!--<clientCertificate>
            <authentication certificateValidationMode="Custom" customCertificateValidatorType="Common.CustomX509CertificateValidator, Common" trustedStoreLocation="LocalMachine"/>
          </clientCertificate>-->

          <!-- Working? -->
          <!--<issuedTokenAuthentication certificateValidationMode="PeerTrust" allowUntrustedRsaIssuers="true"/>-->
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <extensions>
      <bindingExtensions>
        <add name="IdpStsCustomSecuredBinding" type="Common.IdpStsCustomSecuredBindingCollectionElement, Common"/>
      </bindingExtensions>

    </extensions>
    
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" 
                      logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="524288"/>
    </diagnostics>

  </system.serviceModel>

  <microsoft.identityModel>
    <service>
      <!--<audienceUris>
        <add value="http://ha50idp:8080/Model2UserSts/Issue.svc"/>
      </audienceUris>-->
      <!--<issuerNameRegistry type="IdpSts.IdentityProviderIssuerNameRegistry"/>-->
      <securityTokenHandlers>
        <remove type="Microsoft.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add type="IdpSts.CustomUserNameSecurityTokenHandler, IdpSts"/>
      </securityTokenHandlers>
      <!--<serviceCertificate>-->
        <!-- TODO: Necessary?-->
        <!-- Certificate Configuration - ha50idpm2 -->
        <!--<certificateReference findValue="d4 4f ce 24 89 51 15 2f 74 00 17 a1 b2 ef 8a 00 d3 08 c8 e2" 
                              storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
      </serviceCertificate>
      <certificateValidation certificateValidationMode="PeerTrust"/>-->
    </service>
  </microsoft.identityModel>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Critical, Error" propagateActivity="true">
      <listeners>
        <add name="xml"/>
      </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>

      <source name="System.IdentityModel.MessageLogging" switchValue="Verbose, ActivityTracing" logKnownPii="true">
        <listeners>
          <add name="xmlIdentity"/>
        </listeners>
      </source>
      <source name="System.IdentityModel" switchValue="Verbose, ActivityTracing" logKnownPii="true">
        <listeners>
          <add name="xmlIdentity"/>
        </listeners>
      </source>


      <source name="Microsoft.IdentityModel" switchValue="Verbose">
        <listeners>
          <add name="wif"/>
        </listeners>
      </source>
      <source name="MyTraceSource" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name ="myListener"/>
        </listeners>
      </source>

    </sources>

    <sharedListeners>
      <add initializeData="C:\temp\IdpSts-MyTraceSource.log" type="System.Diagnostics.TextWriterTraceListener" name="myListener"/>
      <add initializeData="C:\temp\IDP-WcfLog.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
      <add initializeData="C:\temp\IDP-WIF.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="wif"/>
      <add initializeData="c:\temp\IdentityTrace.svclog" name="xmlIdentity" type="System.Diagnostics.XmlWriterTraceListener"/>
    </sharedListeners>
    <trace autoflush="true"/>
  </system.diagnostics>
  
<startup>
  <supportedRuntime version="v2.0.50727"/>
</startup>
</configuration>
