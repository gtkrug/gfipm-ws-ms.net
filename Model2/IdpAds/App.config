<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
  </configSections>

  <appSettings>
    <add key="TrustFabricDocument" value="TrustFabric\gfipm-trust-fabric-model2-sample-signed.xml"/>
        
    <!-- Certificate Configuration - ha50idpm2 -->
    <add key="SigningCertificateName" value="CN=ha50idpm2, L=Rome, S=GA, C=US, E=ha50m2@idp.net"/>
    <!--<add key="SigningCertificateName" value="E=ha50@idp.net, CN=HA50IDP, O=Hawaii Five0, L=Dallas, S=GA, C=US"/>-->

    <add key="IdpEntityId" value="ha50idpm2"/>
  </appSettings>

  <system.web>
    <customErrors mode="Off"/>
    <compilation debug="true">
      <assemblies>
        <add assembly="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </assemblies>
    </compilation>

  </system.web>


  <system.serviceModel>
    <services>
      <service name="Microsoft.IdentityModel.Protocols.WSTrust.WSTrustServiceContract" behaviorConfiguration="AdsBehavior">
        <!-- Standard WS-* binding-->

        <!-- GFIPM S2S 8.8.2.1 ADS web service endpoint -->
        <!-- GFIPM S2S 8.8.2.3 WS-TRUST -->
        <endpoint name="AssertionDelegateService" address="" binding="adsCustomSecuredBinding" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>

        <!-- This endpoint fails with get Metadata -->
        <!--<endpoint name="AssertionDelegateService" address="" binding="customBinding" bindingConfiguration="CustomSecureTransport" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract"/>-->
        
        <endpoint address="mex" binding="mexHttpBinding" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice" contract="IMetadataExchange"/>

        <!-- When HTTPS REquireClientCertificate is TRUE, the binding for the MEX endpoint must match that of the service https endpoint!!! -->
        <!--<endpoint address="mex" binding="adsCustomSecuredBinding" contract="IMetadataExchange" bindingNamespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice"/>-->
        
      </service>
    </services>

    <bindings>
      <adsCustomSecuredBinding/>
      
      <customBinding>
        <!-- GFIPM S2S 8.8.2.2 Consumer-Provider SIP conformance -->
        <binding name="CustomSecureTransport" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <security defaultAlgorithmSuite="Basic256Sha256" allowSerializedSigningTokenOnReply="true" authenticationMode="MutualCertificateDuplex" requireDerivedKeys="false" includeTimestamp="true" messageProtectionOrder="SignBeforeEncrypt" messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10" requireSignatureConfirmation="false">
          </security>
          <textMessageEncoding messageVersion="Soap11WSAddressing10" writeEncoding="utf-8"/>

          <!-- .Net 3.5 -->
          <httpsTransport/>

          <!-- .Net 4.0 -->
          <!--<httpsTransport  realm="" manualAddressing="false" maxBufferPoolSize="524288"
                                 maxReceivedMessageSize="200000000" allowCookies="false" authenticationScheme="Anonymous"
                                 bypassProxyOnLocal="false"  hostNameComparisonMode="StrongWildcard"
                                 keepAliveEnabled="true" maxBufferSize="200000000" proxyAuthenticationScheme="Anonymous"
                                 transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
                                 useDefaultWebProxy="true" requireClientCertificate="false" />-->

        </binding>
      </customBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="AdsBehavior">
          <!-- 
          The serviceMetadata behavior allows one to enable metadata (e.g. WSDL, Policy) publishing.
          This configuration enables publishing of such data over HTTP GET.
          -->
          <!--<serviceMetadata httpGetEnabled="false" httpsGetEnabled="true"/>-->
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceCredentials>
            
            <!-- Certificate Configuration - ha50idpm2 -->
            <serviceCertificate findValue="d4 4f ce 24 89 51 15 2f 74 00 17 a1 b2 ef 8a 00 d3 08 c8 e2" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
            <!--<clientCertificate>
              <authentication certificateValidationMode="Custom" customCertificateValidatorType="Common.CustomX509CertificateValidator, Common" trustedStoreLocation="LocalMachine"/>
            </clientCertificate>-->
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <extensions>
      <bindingExtensions>
        <add name="adsCustomSecuredBinding" type="Common.AdsCustomSecuredBindingCollectionElement, Common"/>
      </bindingExtensions>
    </extensions>
    
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="3000" maxSizeOfMessageToLog="524288"/>
    </diagnostics>

  </system.serviceModel>

  <!-- See "An Identity Provider and its STS: writing a custom STS with the October Beta of the Geneva Framework" for an explanation of 
       why we need the <microsoft.identityModel> element at:
       http://blogs.msdn.com/b/vbertocci/archive/2008/11/26/an-identity-provider-and-its-sts-writing-a-custom-sts-with-the-october-beta-of-the-geneva-framework.aspx 
    -->

  
  <!-- <securityTokenHandlers>
            <remove type="Microsoft.IdentityModel.Tokens.X509SecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add type="ActAsSts.MyX509CertificateValidator, App_Code"/>
   -->

  <microsoft.identityModel>
    <service>
      <!--<audienceUris>
        <add value="https://HA50IDP:8543/Model2Ads/Issue.svc"/>
      </audienceUris>-->
      
      <!-- TODO: This is loaded programmatically and here !!-->
      <issuerNameRegistry type="IdpAds.IdpAdsIssuerNameRegistry, IdpAds"/>
      <securityTokenHandlers>
   
        <remove type="Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add type="IdpAds.CustomSaml2SecurityTokenHandler, IdpAds">
        </add>
      </securityTokenHandlers>
      <!--<serviceCertificate>
        <certificateReference findValue="65 c7 27 37 93 8a 2f 24 4b 77 ff 72 0a 2a ed 48 4b 26 ef 82" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
      </serviceCertificate>-->
    </service>
  </microsoft.identityModel>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <!--<source name="System.ServiceModel" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xmlInfo"/>
        </listeners>
      </source>-->
      <source name="System.ServiceModel.MessageLogging" switchValue="Critical,Error">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>

      <source name="Microsoft.IdentityModel" switchValue="Verbose">
        <listeners>
          <add name="wif"/>
        </listeners>
      </source>
      <source name="MyTraceSource" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name="myListener"/>
        </listeners>
      </source>

      <source name="AdsTraceSource" switchValue="Verbose, ActivityTracing">
        <listeners>
          <add name="adsListener"/>
        </listeners>
      </source>

    </sources>
    <sharedListeners>
      <add initializeData="C:\temp\IdpAds-MyTraceSource.log" type="System.Diagnostics.TextWriterTraceListener" name="myListener"/>
      <add initializeData="C:\temp\AdsTraceSource.log" type="System.Diagnostics.TextWriterTraceListener" name="adsListener"/>
      <add initializeData="C:\temp\ADS-WcfLog-Error.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml"/>
      <!--<add initializeData="C:\temp\ADS-WcfLog-Info.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xmlInfo"/>-->
      <add initializeData="C:\temp\ADS-WIF.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="wif"/>
    </sharedListeners>
    <trace autoflush="true"/>
  </system.diagnostics>

  <startup>
    
  <supportedRuntime version="v2.0.50727"/></startup>
</configuration>
